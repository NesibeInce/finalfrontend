{"ast":null,"code":"import React,{Suspense}from'react';import{BrowserRouter as Router,Route,Redirect,Switch}from'react-router-dom';// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from'./shared/components/Navigation/MainNavigation';import{AuthContext}from'./shared/context/auth-context';import{useAuth}from'./shared/hooks/auth-hook';import LoadingSpinner from'./shared/components/UIElements/LoadingSpinner';var Users=React.lazy(function(){return import('./user/pages/Users');});var NewPlace=React.lazy(function(){return import('./places/pages/NewPlace');});var UserPlaces=React.lazy(function(){return import('./places/pages/UserPlaces');});var UpdatePlace=React.lazy(function(){return import('./places/pages/UpdatePlace');});var Auth=React.lazy(function(){return import('./user/pages/Auth');});var App=function App(){var _useAuth=useAuth(),token=_useAuth.token,login=_useAuth.login,logout=_useAuth.logout,userId=_useAuth.userId;var routes;if(token){routes=React.createElement(Switch,null,React.createElement(Route,{path:\"/\",exact:true},React.createElement(Users,null)),React.createElement(Route,{path:\"/:userId/places\",exact:true},React.createElement(UserPlaces,null)),React.createElement(Route,{path:\"/places/new\",exact:true},React.createElement(NewPlace,null)),React.createElement(Route,{path:\"/places/:placeId\"},React.createElement(UpdatePlace,null)),React.createElement(Redirect,{to:\"/\"}));}else{routes=React.createElement(Switch,null,React.createElement(Route,{path:\"/\",exact:true},React.createElement(Users,null)),React.createElement(Route,{path:\"/:userId/places\",exact:true},React.createElement(UserPlaces,null)),React.createElement(Route,{path:\"/auth\"},React.createElement(Auth,null)),React.createElement(Redirect,{to:\"/auth\"}));}return React.createElement(AuthContext.Provider,{value:{isLoggedIn:!!token,token:token,userId:userId,login:login,logout:logout}},React.createElement(Router,null,React.createElement(MainNavigation,null),React.createElement(\"main\",null,React.createElement(Suspense,{fallback:React.createElement(\"div\",{className:\"center\"},React.createElement(LoadingSpinner,null))},routes))));};export default App;","map":{"version":3,"sources":["/Users/nesy/Desktop/HYF/HYF_HW/8.Final_Project/Complete_Final_Project/frontend/src/App.js"],"names":["React","Suspense","BrowserRouter","Router","Route","Redirect","Switch","MainNavigation","AuthContext","useAuth","LoadingSpinner","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","token","login","logout","userId","routes","isLoggedIn"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,QAAzC,CAAmDC,MAAnD,KAAiE,kBAAjE,CAEA;AACA;AACA;AACA;AACA;AACA,MAAOC,CAAAA,cAAP,KAA2B,+CAA3B,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,OAASC,OAAT,KAAwB,0BAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,+CAA3B,CAEA,GAAMC,CAAAA,KAAK,CAAGX,KAAK,CAACY,IAAN,CAAW,iBAAM,QAAO,oBAAP,CAAN,EAAX,CAAd,CACA,GAAMC,CAAAA,QAAQ,CAAGb,KAAK,CAACY,IAAN,CAAW,iBAAM,QAAO,yBAAP,CAAN,EAAX,CAAjB,CACA,GAAME,CAAAA,UAAU,CAAGd,KAAK,CAACY,IAAN,CAAW,iBAAM,QAAO,2BAAP,CAAN,EAAX,CAAnB,CACA,GAAMG,CAAAA,WAAW,CAAGf,KAAK,CAACY,IAAN,CAAW,iBAAM,QAAO,4BAAP,CAAN,EAAX,CAApB,CACA,GAAMI,CAAAA,IAAI,CAAGhB,KAAK,CAACY,IAAN,CAAW,iBAAM,QAAO,mBAAP,CAAN,EAAX,CAAb,CAEA,GAAMK,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,cACyBR,OAAO,EADhC,CACRS,KADQ,UACRA,KADQ,CACDC,KADC,UACDA,KADC,CACMC,MADN,UACMA,MADN,CACcC,MADd,UACcA,MADd,CAGhB,GAAIC,CAAAA,MAAJ,CAEA,GAAIJ,KAAJ,CAAW,CACTI,MAAM,CACJ,oBAAC,MAAD,MACE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,EACE,oBAAC,KAAD,MADF,CADF,CAIE,oBAAC,KAAD,EAAO,IAAI,CAAC,iBAAZ,CAA8B,KAAK,KAAnC,EACE,oBAAC,UAAD,MADF,CAJF,CAOE,oBAAC,KAAD,EAAO,IAAI,CAAC,aAAZ,CAA0B,KAAK,KAA/B,EACE,oBAAC,QAAD,MADF,CAPF,CAUE,oBAAC,KAAD,EAAO,IAAI,CAAC,kBAAZ,EACE,oBAAC,WAAD,MADF,CAVF,CAaE,oBAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAbF,CADF,CAiBD,CAlBD,IAkBO,CACLA,MAAM,CACJ,oBAAC,MAAD,MACE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,EACE,oBAAC,KAAD,MADF,CADF,CAIE,oBAAC,KAAD,EAAO,IAAI,CAAC,iBAAZ,CAA8B,KAAK,KAAnC,EACE,oBAAC,UAAD,MADF,CAJF,CAOE,oBAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,EACE,oBAAC,IAAD,MADF,CAPF,CAUE,oBAAC,QAAD,EAAU,EAAE,CAAC,OAAb,EAVF,CADF,CAcD,CAED,MACE,qBAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLC,UAAU,CAAE,CAAC,CAACL,KADT,CAELA,KAAK,CAAEA,KAFF,CAGLG,MAAM,CAAEA,MAHH,CAILF,KAAK,CAAEA,KAJF,CAKLC,MAAM,CAAEA,MALH,CADT,EASE,oBAAC,MAAD,MACE,oBAAC,cAAD,MADF,CAEE,gCACE,oBAAC,QAAD,EACE,QAAQ,CACN,2BAAK,SAAS,CAAC,QAAf,EACE,oBAAC,cAAD,MADF,CAFJ,EAOGE,MAPH,CADF,CAFF,CATF,CADF,CA0BD,CAlED,CAoEA,cAAeL,CAAAA,GAAf","sourcesContent":["import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}